#!/bin/bash
#
# Download Nextlander podcast(s)
#
# The optional episode number is in RSS order (1 = newest, 2 = previous ...)
#
RSS_URL=https://omny.fm/shows/the-nextlander-podcast/playlists/podcast.rss
RSS=$1
EPISODE=${2:-1}

command -v wget >/dev/null 2>&1 || { echo >&2 "wget not available, aborting."; exit 1; }
command -v xmlstarlet >/dev/null 2>&1 || { echo >&2 "xmlstarlet not available, aborting."; exit 1; }

# If passed a URI, then download it
if [[ ${RSS} =~ ^http.* ]]; then
	echo "URI detected."
	RSS_URL=${RSS}
fi

# Download RSS if none given.
if [ ! -f "${RSS}" ]; then
	TMPNAME=$(mktemp)
	RSS=${TMPNAME}
	echo "Downloading RSS."
	wget ${RSS_URL} -O "${RSS}"
else
	echo "Using local RSS file."
fi

EPATH="/rss/channel/item[${EPISODE}]"

# Extract relevant data from XML
CHANNEL=$(xmlstarlet sel --text -t -v '/rss/channel/title' ${RSS})
TITLE=$(xmlstarlet sel --text -t -v ${EPATH}'/title' ${RSS})
URL=$(xmlstarlet sel --text -t -v ${EPATH}'/enclosure/@url' ${RSS})
EPISODE=$(xmlstarlet sel --text -t -v ${EPATH}'/itunes:episode' ${RSS})
PUBDATE=$(xmlstarlet sel --text -t -v ${EPATH}'/pubDate' ${RSS})
DATE=$(date +"%Y-%m-%d" --date="${PUBDATE}")

EPISODE_PAD=$(printf "%03d" ${EPISODE})
# Try to strip episode number from title
TITLE=${TITLE//${EPISODE_PAD} - /}
TITLE=${TITLE//${EPISODE_PAD}: /}
DEST=$(printf "%s - %s - %s (%s).mp3" "${CHANNEL}" "${EPISODE_PAD}" "${TITLE%\?}" "${DATE}")
# Filename fixups
DEST=${DEST//:/ - }
DEST=${DEST//\//-}
DEST=${DEST//  / }

# Download if necessary.
if [ ! -z ${URL} ]; then
	if [ ! -f "${DEST}" ]; then
		echo "Downloading podcast episode."
		wget ${URL} -O "${DEST}"
	else
		echo "Episode '$TITLE' already downloaded."
	fi
fi

if [ ! -z "${TMPNAME}" ]; then
	rm ${TMPNAME}
fi
